###
# TEMPLATE: root_menu
# DESCRIPTION: The MENU ROOT template. This template will be called by the MASTER ROOT template. It reads the templates for the menu parts, like the default menu 
setup, language menu, header- and footermenu's. In this template record are only other template records included.
###



# EXT: menu.mainmenu
# DESC: The MENU template.Configuration for default menu, which can be used with small modifications for other menu's, without writing the whole menu configuration all over again for all kinds of menu's.

lib.mainMenu = COA
lib.mainMenu {
    10 = HMENU
	10.special = directory
	10.special.value = 2
    10 {
        wrap = <nav id="nav">|</nav>
        entryLevel = 0
        1 = TMENU
        1 {
            expAll = 1
            noBlur = 1
            wrap = <ul>|</ul>
           # target = _top
            NO {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li>|</li> 
               # allWrap = <div class="menu_header_no">|</div>
			   
            }
            ACT < .NO
            ACT = 1
            ACT {
				 wrapItemAndSub = <li class="active">|</li> 
				 ATagParams = class="active" 
              #  allWrap = <div class="menu_header_act">|</div>
            }
            IFSUB < .NO
            IFSUB = 1
            IFSUB {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li class="sub">|</li> 
               # allWrap = <div class="menu_header_no">|</div>
			   
            }
            ACTIFSUB < .IFSUB
            ACTIFSUB = 1
            ACTIFSUB {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li class="sub active">|</li> 
               # allWrap = <div class="menu_header_no">|</div>
			   
            }
        }
        2 = TMENU
        2 {
            noBlur = 1
            wrap = <ul>|</ul>
            target = _top
            NO {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li>|</li>
				ATagParams = class="active" 
               # allWrap = <div class="menu_sub_no">|</div>
            }
            CUR < .NO
            CUR = 1
            CUR {
				wrapItemAndSub = <li>|</li>
              #  allWrap = <div class="menu_sub_act">|</div>
            }
            ACT < .CUR
            ACT = 1
        }
    }
}



lib.mainMenu  = HMENU
lib.mainMenu  {
special = directory
special.value = 2

 # We define the first level as text menu.
 1 = TMENU

 1.expAll = 1
 1.noBlur = 1
 # We define the normal state ("NO").
 1.NO = 1
 1.NO.wrapItemAndSub = <li>|</li>

 # We define the active state ("ACT").
 1.ACT = 1
 1.ACT.wrapItemAndSub = <li class="active">|</li>

 # Wrap the whole first level.
 1.wrap = <nav id="nav"><ul>|</ul></nav>

 # The second and third level should be configured exactly
 # the same way.
 # In between the curly brackets, objects can be copied.
 # With the dot "." we define that the object can be found
 # in the brackets.
 # With 2.wrap and 3.wrap we overwrite the wrap, which was
 # copied from 1.wrap.
 
 2 < .1
 2.NO = 1
 2.NO.allWrap = <li>|</li>
 
 2.ACT = 1
 2.ACT.wrapItemAndSub = <li class="active">|</li>  
 2.wrap = <ul class="level2">|</ul>
 
 3 < .1
 3.wrap = <ul class="level3">|</ul>
}


# EXT : menu.quick_menu
# DESC : Top Quick menu

	
	
	menu.quickmenu = COA
	menu.quickmenu{
	10 = HMENU
	10 {
		
		special = list
		special.value = 21
			
		1 = TMENU
		1 {
			wrap = |
			expAll = 1
			noBlur = 1
			
			NO = 1
			NO {
				ATagTitle {
					field = title
					fieldRequired = nav_title
				}
				ATagParams = id="scroll" || 
				
				ATagBeforeWrap = 1
				linkWrap = |
				
				wrapItemAndSub.insertData = 1
				wrapItemAndSub = |
				stdWrap.htmlSpecialChars = 1			
			}
					
			ACT < .NO
			ACT {
				ATagParams = data-toggle="dropdown" class="dropdown-toggle"
				
				ATagBeforeWrap = 1
				linkWrap = | 
				
				ATagParams = id="scroll" class="active" || class="active"
				wrapItemAndSub = |
			}
		}
		
	}
	
	20 = HMENU
	20 {
		
		special = list
		special.value = 22
			
		1 = TMENU
		1 {
			wrap = |
			expAll = 1
			noBlur = 1
			
			NO = 1
			NO {
				ATagTitle {
					field = title
					fieldRequired = nav_title
				}
				ATagParams = 
				
				ATagBeforeWrap = 1
				linkWrap = |
				
				wrapItemAndSub.insertData = 1
				wrapItemAndSub = |
				stdWrap.htmlSpecialChars = 1			
			}
					
			ACT < .NO
			ACT {
				ATagParams = data-toggle="dropdown" class="dropdown-toggle"
				
				ATagBeforeWrap = 1
				linkWrap = | 
				
				ATagParams = id="scroll" class="active" || class="active"
				wrapItemAndSub = |
			}
		}
		
	}
		
	}



# EXT : menu.footerMenu
# DESC: Footer menu

menu.footerMenu = HMENU
menu.footerMenu {
	
	special = directory
	special.value = 14
		
	1 = TMENU
	1 {
		wrap = <ul>|</ul>
		expAll = 1
		noBlur = 1
		
		NO = 1
		NO {
			ATagTitle {
				field = title
				fieldRequired = nav_title
			}
			ATagParams = class="parent_menu"
			
			ATagBeforeWrap = 1
			linkWrap = |
			
			wrapItemAndSub.insertData = 1
			wrapItemAndSub = <li class="first menu-{field:uid}">|</li> |*| <li class="menu-{field:uid}">|</li>
			stdWrap.htmlSpecialChars = 1			
		}
				
		ACT < .NO
		ACT {
			ATagParams = data-toggle="dropdown" class="dropdown-toggle"
			
			ATagBeforeWrap = 1
			linkWrap = | 
			
			ATagParams = class="parent_menu active"
			wrapItemAndSub = <li class="active first menu-{field:uid} dropdown">|</li> |*| <li class="active menu-{field:uid} dropdown">|</li>
		}
	}
	
}


# EXT : menu.footerMenu
# DESC: Footer menu


menu.socialMedia = COA
menu.socialMedia{
	10 = HMENU
	10 {
		
		special = list
		special.value = 9
			
		1 = TMENU
		1 {
			wrap = <h4>|</h4>
			expAll = 1
			noBlur = 1
			
			NO = 1
			NO {
				ATagTitle {
					field = title
					fieldRequired = nav_title
				}
				ATagParams = class="parent_menu"
				
				ATagBeforeWrap = 1
				linkWrap = |
				
				wrapItemAndSub.insertData = 1
				wrapItemAndSub = |
				stdWrap.htmlSpecialChars = 1	
				doNotLinkIt = 1			
			}
		}
		
	}

	20 < menu.socialMediaMenu

}

menu.socialMediaMenu = HMENU
menu.socialMediaMenu {
	
	special = directory
	special.value = 9
		
	1 = TMENU
	1 {
		wrap = <div class="social-icon"><ul>|</ul></div>
		expAll = 1
		noBlur = 1
		
		NO = 1
		NO {
			ATagTitle {
				field = title
				fieldRequired = nav_title
			}
			ATagParams = class="fb-icon" 
			
			ATagBeforeWrap = 1
			linkWrap = |
			
			wrapItemAndSub.insertData = 1
			wrapItemAndSub = <li class="first menu-{field:uid}">|</li>
			stdWrap.wrap = <i class="fa fa-facebook"></i> || <i class="fa fa-twitter"></i> || <i class="fa fa-linkedin"></i> || <i class="fa fa-skype"></i>
			stdWrap.htmlSpecialChars = 1			
		}
				
		ACT < .NO
		ACT {
			ATagParams = data-toggle="dropdown" class="dropdown-toggle"
			
			ATagBeforeWrap = 1
			linkWrap = | 
			
			ATagParams = class="fb-icon active" 
			wrapItemAndSub = <li class="active first menu-{field:uid} dropdown">|</li>
			stdWrap.wrap = <i class="fa fa-facebook"></i> || <i class="fa fa-twitter"></i> || <i class="fa fa-linkedin"></i> || <i class="fa fa-skype"></i>
		}
	}
	
}


# BREADCRUMB MENU
menu.breadcrumb = HMENU
menu.breadcrumb {
	special = rootline
	special.range = 1|-1
	#includeNotInMenu = 0
	1 = TMENU
	1 {
		noBlur = 1
		wrap = <a href="">Home</a>|
		NO {
			wrapItemAndSub = <span><em></em>|</span>
		}
		CUR = 1
		CUR {
			wrapItemAndSub = <span><em></em>|</span>
			doNotLinkIt = 1
		}
	}
}


# Language Menu
menu.lang_menu = COA
menu.lang_menu {
    10 = HMENU
    10 {
        special = language
        special.value = 0,1
        1 = TMENU
        1 {
            expAll = 0
            #wrap = <ul class="langmenu"> | </ul>
            NO = 1
            NO {
                stdWrap.cObject = TEXT
                stdWrap.cObject {
                    value =  english || deutsch

                } 
                #allWrap = |*| <li>|&nbsp;&#124;&nbsp;<li> |*| <li>|<li>
                #wrapItemAndSub = <li>|</li>
                #ATagParams = |*|  |*| 
            }
            RO < .NO
            RO = 1
            RO.ATagParams = class="hover"
            
            ACT < .NO
            ACT = 1
            ACT {
                ATagParams = |*| class="active" |*| class="active"
                #doNotLinkIt = 1
                #allWrap = <li class="lang_act">|<li>
                #allWrap = <li>|<li>
            }
        }
    }
}
